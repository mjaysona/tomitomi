---
import AllTags from '@/components/AllTags.astro';
import ArticleHead from '@/components/ArticleHead.astro';
import ArticleItem from '@/components/ArticleItem.astro';
import { Article } from '@/interfaces/articles';
import PageWrapper from '@/layouts/PageWrapper.astro';

const articles = await Astro.glob<Article>('../articles/*.md');
const featuredArticles = articles.filter(({ frontmatter: { featured } }) => (
  featured
));
const recentArticles = articles.sort(
	(a, b) => new Date(b.frontmatter.pubDate).valueOf()
    - new Date(a.frontmatter.pubDate).valueOf()
).slice(0, 3);
---

<PageWrapper>
  <div class="header">
    <ArticleHead />
  </div>
  <div class="content">
    <!-- Enable feature when there is enough content -->
    <div class="content__articles">
      <div>
        <h4>Recent</h4>
        <div class="content__articles__recent">
          {recentArticles.map(({
            frontmatter: {
              title,
              pubDate,
              tags,
              slug,
            }
          }) => (
            <div>
              <ArticleItem
                title={title} 
                pubDate={pubDate}
                tags={tags}
                slug={slug}
                compact
              />
            </div>
          ))}
        </div>
      </div>
    </div>
    <div class="content__tags">
      <div>
        <AllTags />
      </div>
    </div>
  </div>
</PageWrapper>
<style lang="scss">
  .header {
    margin-top: 24px;
  }
  .content {
    display: grid;
    flex: 1;
    gap: 116px;
    grid-template-columns: 1fr 1fr;
    margin-top: 64px;
    .content__articles {
      > div {
        padding-bottom: 36px;
        > div > div {
          margin-bottom: 36px;
        }
      }
    }
    .content__tags {
      > div {
        position: sticky;
        top: 0;
      }
    }
  }
</style>
